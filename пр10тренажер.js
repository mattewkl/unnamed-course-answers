
//react –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥

//y4.1
ReactDOM.render(
  (<div>
  <h2>–ì—Ä—É—Å—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö</h2>
  <p>
    –ù–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ —Å–ª–æ–Ω—è—Ç–∞ –Ω–µ —É–º–µ—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ö–æ–±–æ—Ç–æ–º.
  </p>
  <p>
    –ó–µ–±—Ä—ã –Ω–µ –º–æ–≥—É—Ç —Å–ø–∞—Ç—å –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ.
  </p>
  <p>
    –£ –ø–∏—è–≤–æ–∫ 32 –º–æ–∑–≥–∞.
  </p>
</div>
),
  document.querySelector('#root'));

//y4.2 
const zebras = '–ó–µ–±—Ä—ã';
const leeches = '–ø–∏—è–≤–æ–∫';
const elephants = '—Å–ª–æ–Ω—è—Ç–∞';

ReactDOM.render((
  <div>
    <h2>–ì—Ä—É—Å—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö</h2>
    <p>
      –ù–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ ${elephants} –Ω–µ —É–º–µ—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ö–æ–±–æ—Ç–æ–º.
    </p>
    <p>
      ${zebras} –Ω–µ –º–æ–≥—É—Ç —Å–ø–∞—Ç—å –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ.
    </p>
    <p>
      –£ ${leeches} 32 –º–æ–∑–≥–∞.
    </p>
  </div>
), document.querySelector('#root'));


//y5.1 
const isGuest = false;

ReactDOM.render((
  <div>
   {isGuest ? (<h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>) :
   (<h2>–ö–∞–∫ –º—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å!</h2>) }
 </div>
 
 ), document.querySelector('#root'));
 
 //y5.2

 
ReactDOM.render((
  <div>
    <div className="item">–ö–≤–∞–¥—Ä–∞—Ç</div>
    <div className="item" style={{borderRadius:'50%'}}>–ö—Ä—É–≥</div>
  </div>
), document.querySelector('#root'));

//y5.3




ReactDOM.render((
  <>
  <h2>–£—á–µ–Ω—å–µ ‚Äî —Å–≤–µ—Ç,</h2>
  <h3>–∞ –Ω–µ—É—á–µ–Ω—å–µ ‚Äî —Ç—å–º–∞</h3>
  </>
), document.querySelector('#root'));

//y6.1

const list = [{
  name: '–•–ª–µ–±',
  quantity: '1 –±–∞—Ç–æ–Ω',
}, {
  name: '–†–æ–º',
  quantity: '3 –±—É—Ç—ã–ª–∫–∏',
}, {
  name: '–ö–æ–∫–∞-–∫–æ–ª–∞',
  quantity: '3 –±—É—Ç—ã–ª–∫–∏',
}, {
  name: '–¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞',
  quantity: '–í—Å—è, —á—Ç–æ –µ—Å—Ç—å',
}];

ReactDOM.render((
  <ul>
    {list.map((item, i) => (
    <li key={i}>
        <b>{item.name}</b>
        <i>{item.quantity}</i>
    </li>
    ))}
  </ul>
), document.querySelector('#root'));


//y6.2 

function handleKeyUp(e) {
  document.getElementById('title').innerText = e.target.value;
}

function handleClick(e) {
  document.getElementById('title').innerText += ' ' + e.target.textContent;
}

function handleMouseEnter(e) {
  e.target.classList.add('hover');
}

function handleMouseLeave(e) {
  e.target.classList.remove('hover');
}

function handleMouseDown(e) {
  e.target.classList.add('active');
}

function handleMouseUp(e) {
  e.target.classList.remove('active');
}

ReactDOM.render((
  <div>
    <input onKeyUp={handleKeyUp} type="text" / >
    <button onClick={handleClick} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>ü§©</button>
    <button onClick={handleClick} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>ü§Ø</button>
    <button onClick={handleClick} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onMouseDown={handleMouseDown} onMouseUp={handleMouseUp} >ü§™</button>
  </div>
), document.querySelector('#root')))


//y7.1 –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç—å –∏–∑ Html —Ä–∞–∑–º–µ—Ç–∫—É –∂–∏—Ä–∞—Ñ–∞

function Giraffe(props) {
  return (
    <div className="giraffe">
      <div className="icon">{props.icon}</div>
      <div className="info">
        <h3>{props.name}</h3>
        <span>{props.height}</span>
      </div>
    </div>
  
  );
}

ReactDOM.render((
  <>
    <h2>–ê—Ñ—Ä–∏–∫–∞</h2>
    <Giraffe icon="ü¶í" name="–ñ–∏—Ä–∞—Ñ" height="–†–æ—Å—Ç: 4 –º–µ—Ç—Ä–∞" />
  </>
), document.querySelector('#root'));


//y7.2
function Giraffe() {
  return (
    <div className="giraffe">
      <div className="icon">ü¶í</div>
      <div className="info">
        <h3>–ñ–∏—Ä–∞—Ñ</h3>
        <span>–†–æ—Å—Ç: 4 –º–µ—Ç—Ä–∞</span>
      </div>
    </div>
  );
}

function Hedgehog() {
  return (
      <div className="hedgehog">
      <div className="icon">ü¶î</div>
      <div className="info">
        <h3>–Å–∂</h3>
        <span>–†–æ—Å—Ç: 15 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤</span>
      </div>
    </div>
  );
}

ReactDOM.render((
  <>
    <h2>–ê—Ñ—Ä–∏–∫–∞</h2>
    <Giraffe />
    <Hedgehog />
    
  </>
), document.querySelector('#root'));



//7.3

function Animal(props) {
  return (
    <div className="animal">
      <div className="icon">{props.icon}</div>
      <div className="info">
        <h3>{props.name}</h3>
        <span>–†–æ—Å—Ç: {props.height}</span>
      </div>
    </div>
  );
}

ReactDOM.render((
  <>
    <h2>–ê—Ñ—Ä–∏–∫–∞</h2>
    <Animal name="–ñ–∏—Ä–∞—Ñ" icon="ü¶í"  height="4 –º–µ—Ç—Ä–∞"/>
    <Animal name="–Å–∂" icon="ü¶î"  height="15 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤"/>
    <Animal name="–°–∫—É–Ω—Å" icon="ü¶®"  height="–Ω–∏–∫—Ç–æ –Ω–µ –º–µ—Ä—è–ª"/>

  </>
), document.querySelector('#root'));

//y7.4

function Animal(props) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å –Ω–∞ —á–∞—Å–∞—Ö
  const hours = new Date().getHours();
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ—á—å –ª–∏ —Å–µ–π—á–∞—Å
  const isNight = hours > 22 || hours < 6;
  // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ —Ä–∞–∑–Ω—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ª–∏–±–æ —Å–ø—è—Ç, –ª–∏–±–æ –±–æ–¥—Ä—Å—Ç–≤—É—é—Ç
  const isSleeping = (isNight && !props.isNocturnal) || (!isNight && props.isNocturnal);

  return (
    <div className="animal">
      <div className="icon">{isSleeping ? 'üí§' : props.icon}</div>
      <div className="info">
        <h3> {props.name}</h3>
        <span>–†–æ—Å—Ç: {props.height}</span>
      </div>
    </div>
  );
}

ReactDOM.render((
  <>
    <h2>–ê—Ñ—Ä–∏–∫–∞</h2>
    <Animal icon="ü¶í" name="–ñ–∏—Ä–∞—Ñ" height="4 –º–µ—Ç—Ä–∞" isNocturnal={false}/>
    <Animal icon="ü¶î" name="–Å–∂" height="15 —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤" isNocturnal={true} />
    <Animal icon="ü¶®" name="–°–∫—É–Ω—Å" height="–Ω–∏–∫—Ç–æ –Ω–µ –º–µ—Ä—è–ª" isNocturnal={true} />
  </>
), document.querySelector('#root'));

//y8.1 

class Switch extends React.Component {
  constructor(props) {
    super(props)
  }
  render() {
    const className = `switch ${this.props.color} ${this.props.isActive ? 'on' : 'off'}`;

    return (
      <div className={className}>
        <button className="img" />
        <h3>{this.props.title}</h3>
      </div>
    );
  }
}



ReactDOM.render((
  <>
    <Switch title="–°—á–∞—Å—Ç—å–µ" color="blue" isActive={false} />
  </>
), document.querySelector('#root'));


//y8.2 

class Switch extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isActive: false
    }
  }

  handleClick = () => {
    this.setState({isActive: !this.state.isActive})
  };

  render() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript-—à–∞–±–ª–æ–Ω –¥–ª—è —Å–∫–ª–µ–π–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞
    const className = `switch ${this.props.color} ${this.state.isActive ? 'on' : 'off'}`;

    return (
      <div className={className}>
        <button className="img" onClick={this.handleClick} />
        <h3>{this.props.title}</h3>
      </div>
    );
  }
}

ReactDOM.render((
  <Switch title="–°—á–∞—Å—Ç—å–µ" color="blue" isActive={false} />
), document.querySelector('#root'));


//y8.3

class Switch extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      isActive: this.props.isActive,
    };
    
    
  }

  handleClick = () => {
    this.setState({ isActive: !this.state.isActive });
  };

  render() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º JavaScript-—à–∞–±–ª–æ–Ω –¥–ª—è —Å–∫–ª–µ–π–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞
    const className = `switch ${this.props.color} ${this.state.isActive ? 'on' : 'off'}`;

    return (
      <div className={className}>
        <button className="img" onClick={this.handleClick}  />
        <h3>{this.props.title}</h3>
      </div>
    );
  }
}

ReactDOM.render((
  <>
    <Switch title="–°—á–∞—Å—Ç—å–µ" color="blue" isActive={true} />
    <Switch title="–õ—é–±–æ–≤—å" color="orange" isActive={false} />
    <Switch title="–®–∞–≤–µ—Ä–º–∞" color="green" isActive={false} />
  </>
), document.querySelector('#root'));

//y9.1 

class App extends React.Component {
  constructor(props) {
    super(props);

    this.state = { shouldShowScale: false };
  }

  handleChange = () => {
    this.setState({
      shouldShowScale: !this.state.shouldShowScale,
    });
  };

  render() {
    return (
      <>
        <label>
          <input type="checkbox" onChange={this.handleChange} />
          –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å —ç–∫—Ä–∞–Ω–∞
        </label>
        {this.state.shouldShowScale && <Scale />}
      </>
    );
  }
}

class Scale extends React.Component {
  constructor() {
    super();

    this.state = {
      windowSize: [window.innerWidth, window.innerHeight],
    };
  }

  handleWindowResize = () => {
    this.setState({
      windowSize: [window.innerWidth, window.innerHeight],
    });
  };

  
  componentDidMount() {
    window.addEventListener('resize', this.handleWindowResize)
  }
  
  render() {
    return (
      <div className="overlay">
        <div className="modal">
          <h3>–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞:</h3>
          <h2>{this.state.windowSize[0]} x {this.state.windowSize[1]}</h2>
        </div>
      </div>
    );
  }
}

ReactDOM.render((
  <App />
), document.querySelector('#root'));


//y9.2

class App extends React.Component {
  constructor(props) {
    super(props);

    this.state = { shouldShowScale: false };
  }

  handleChange = () => {
    this.setState({
      shouldShowScale: !this.state.shouldShowScale,
    });
  };

  render() {
    return (
      <>
        <label>
          <input type="checkbox" onChange={this.handleChange} />
          –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å —ç–∫—Ä–∞–Ω–∞
        </label>
        {this.state.shouldShowScale && <Scale />}
      </>
    );
  }
}

class Scale extends React.Component {
  constructor() {
    super();

    this.state = {
      windowSize: [window.innerWidth, window.innerHeight],
    };
  }

  componentDidMount() {
    window.addEventListener('resize', this.handleWindowResize);
  }

  
  componentWillUnmount() {
    window.removeEventListener('resize', this.handleWindowResize);
  }
  handleWindowResize = () => {
    this.setState({
      windowSize: [window.innerWidth, window.innerHeight],
    });
  };

  render() {
    return (
      <div className="overlay">
        <div className="modal">
          <h3>–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞:</h3>
          <h2>{this.state.windowSize[0]} x {this.state.windowSize[1]}</h2>
        </div>
      </div>
    );
  }
}

ReactDOM.render((
  <App />
), document.querySelector('#root'));


//–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–∞–∫—Ç–∞

//y4.1 


import React from 'react';
import './App.css';

function App() {
  return (
    <div className="App">
      <h1>Calorie-Zen</h1>
    </div>
  );
}

export default App;

//4.2 –ü–†–û–°–¢–û –ó–ê–ú–ï–ù–ò–¢–¨ –∫–∞–∫ –ø—Ä–æ—Å—è—Ç –≤ –∑–∞–¥–∞–Ω–∏–∏. –°—Ç—Ä–æ–∫–∞ 27 —Ñ–∞–π–ª–∞ index.html –µ—Å —à–æ


//y6.1 –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ return –∏–∑ –∞–ø–ø —Ö—É—è—Ä–∏–º –≤ —Ö–µ–¥–µ—Äjs
App.js

import React from 'react';
import './App.css';
import Header from './Header.js'
import AppContainer from './AppContainer.js'

function App() {
  return (
    <>
      <Header />
      <AppContainer/>
    </>
  );
}

export default App;


//y7.1 Header.js

import React from 'react';
import headerLogo from '../images/calorieZen.png'
function Header() {
  return (
    <div>
      <img src={headerLogo}/>
      <h1>Calorie-Zen</h1>
    </div>
  );
}

export default Header;

//y8.1 header.js

import React from 'react';
import headerLogo from '../images/calorieZen.png';
import './Header.css'

function Header() {
  return (
    <div className={header}>
      <img src={headerLogo} className={header__logo} />
      <h1 className={header__header}>Calorie-Zen</h1>
    </div>
  );
}

export default Header;

//y8.2 AppContainer.js

import React from 'react';
import './AppContainer.css'

function AppContainer() {
  return (
    <div className="container">
      <div className="calories">
        <h2>–ö–∞–ª–æ—Ä–∏–∏:</h2>
      </div>
      <h2>–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã</h2>
    </div>
  );
}

export default AppContainer;

//y9.1 Header.css
@font-face {
  src: url(../fonts/sumana.woff) format('woff');
  font-family: 'Sumana';
}


.header {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 15px;
  flex-direction: column;
}

.header__logo {
  width: 100px;
}

.header__header {
  font-size: 44px;
  margin: 5px 0 0;
  line-height: 1;
  font-family: 'Sumana';
}


//y9.2 AppContainer.css
@font-face {
  src: url(../fonts/roboto.woff) format('woff');
  font-family: 'Roboto';
}


.container {
  font-family: 'Roboto';
  display: flex;
  justify-content: center;
  min-height: 70vh;
  margin-top: 50px;
}

.calories {
  width: 250px;
  border: 2px solid #F29279;
  border-radius: 20px;
  text-align: center;
  border-right: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.container h2 {
  font-weight: normal;
  font-size: 18px;
  line-height: 1.2;
  margin-top: 25px;
}



//y10.1

//foodAdder.js

import React from 'react';
import './FoodAdder.css';

class FoodAdder extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      FoodList : [ ],
    }
  }

  handleSubmit = () => {
    
  }

  render() { return (
    <form className="food-adder">
      <input type="text" placeholder="–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã" />
      <button className="food-adder__submit"></button>
    </form>
  )}

}
  

export default FoodAdder;


//AppContainer.js

import React from 'react';
import './AppContainer.css';
import FoodAdder from './FoodAdder.js';
function AppContainer() {
  return (
    <div className="container">
      <div className="calories">
        <h2>–ö–∞–ª–æ—Ä–∏–∏:</h2>
      </div>
      <FoodAdder/>
    </div>
  );
}

export default AppContainer;


//y13.1 

function secret(secretMessage){
  console.log(secretMessage)
}

secret("–º–µ–¥–≤–µ–¥—å –≤—ã–ø—å–µ—Ç —Ä—é–º–∫—É –≤ 8 —É—Ç—Ä–∞");

// –•—É–∫–∏ (–ø—Ä–∞–≤–æ–π)

y2.1 

function Boxing() {
  const [isKnockout, setIsKnockout ] = React.useState();

  function handleClick() {
    setIsKnockout(true);
  }

  return (
    <div>
      {!isKnockout ? (
        <>
          <span>ü§®</span>
          <button onClick={handleClick}>Hook!</button>
        </>
      ) : (
        <span>ü•¥</span>
      )}
      <span>ü•ä</span>
    </div>
  );
}

ReactDOM.render((
  <Boxing />
), document.querySelector('#root'));



function Switch(props) {
  const [isActive, setIsActive] = React.useState(false);


  handleClick() {
    setIsActive(!isActive);
  };
  
  render() {
    return (
      <div className={className}>
        <button className="img" onClick={handleClick} />
        <h3>{title}</h3>
      </div>
    );
  }
}

ReactDOM.render((
  <Switch title="–°—á–∞—Å—Ç—å–µ" color="blue" isActive={false} />
), document.querySelector('#root'));


//y2.2

function Switch(props) {
  const [isActive, setIsActive] = React.useState(false);


  function handleClick() {
    setIsActive(!isActive);
  };
  
  const className = `switch ${props.color} ${isActive ? 'on' : 'off'}`;

  return (
      <div className={className}>
        <button className="img" onClick={handleClick} />
        <h3>{props.title}</h3>
      </div>
  );
  }


ReactDOM.render((
  <Switch title="–°—á–∞—Å—Ç—å–µ" color="blue" isActive={false} />
), document.querySelector('#root'));


//y2.3 

function GoodDeeds() {
  const [deeds, setDeeds] = React.useState([])

  function handleAddTask(e) {
    const input = e.target.previousSibling;

    setDeeds([...deeds, input.value])

    input.value = '';
  }

  return (
    <>
      <h3>–ú–æ–∏ —Ö–æ—Ä–æ—à–∏–µ –ø–æ—Å—Ç—É–ø–∫–∏</h3>
      <input type="text" placeholder="–ü–æ—Å—Ç—É–ø–æ–∫" />
      <button onClick={handleAddTask}>–î–æ–±–∞–≤–∏—Ç—å!</button>
      <ol>
        {deeds.map((deed, i) => (
          <li key={i}>{deed}</li>
        ))}
      </ol>
    </>
  );
}

ReactDOM.render((
  <GoodDeeds />
), document.querySelector('#root'));


//y3.1 

function toggleBackground(shouldShow) {
  document.body.classList.toggle('with-bg', shouldShow);
}

function Beautifier() {
  const [isBeautiful, setIsBeautiful] = React.useState(false);

  React.useEffect((isBeautiful) =>
                  {toggleBackground(isBeautiful)}
  );

  function handleChange() {
    setIsBeautiful(!isBeautiful);
  }

  return (
    <label>
      <input type="checkbox" onChange={handleChange} />
      –í–∫–ª—é—á–∏—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π —Ñ–æ–Ω
    </label>
  );
}

ReactDOM.render((
  <Beautifier />
), document.querySelector('#root'));


//y3.2 

function App() {
  const [isCustomCursor, setIsCustomCursor] = React.useState();

  function handleChange() {
    setIsCustomCursor(!isCustomCursor);
  }

  
  function NeonCursor() {
  const [position, setPosition] = React.useState({ top: 0, left: 0 });

  React.useEffect(() => {
    function handleMouseMove(event) {
      setPosition({
        top: event.pageY,
        left: event.pageX,
      });
    }

        // –°–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–≥–æ —Ö—É–∫–∞
    document.addEventListener('mousemove', handleMouseMove);
    document.body.classList.add('no-cursor');

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã
    return () => {
      document.body.classList.remove('no-cursor');
      document.removeEventListener('mousemove', handleMouseMove);
    };
  });

  return (
    <img
      src="https://code.s3.yandex.net/web-code/react/cursor.svg"
      width={30}
      style={{
        position: 'absolute',
        top: position.top,
        left: position.left,
        pointerEvents: 'none',
      }}
    />
  );
} 
  
  return (
    <>
      <label>
        <input type="checkbox" onChange={handleChange}/>
        –í–∫–ª—é—á–∏—Ç—å –Ω–µ–æ–Ω–æ–≤—ã–π –∫—É—Ä—Å–æ—Ä
      </label>
      {isCustomCursor && <NeonCursor/>}
    </>
  );}
  
 


class NeonCursor extends React.Component {
  constructor(props) {
    super(props);

    this.state = { top: 0, left: 0 };
  }

  componentDidMount() {
    document.addEventListener('mousemove', handleMouseMove);
    document.documentElement.classList.add('no-cursor');
  }

  componentWillUnmount() {
    document.documentElement.classList.remove('no-cursor');
    document.removeEventListener('mousemove', handleMouseMove);
  }

  

  render() {
    return (
      <img
        src="https://code.s3.yandex.net/web-code/react/cursor.svg"
        width={30}
        style={{
          position: 'absolute',
          top: this.state.top,
          left: this.state.left,
          pointerEvents: 'none',
        }}
      />
    );
  }
}

ReactDOM.render(<App/>, document.querySelector('#root'));


//y4.1 

function playSound(fileName) {
  const audio = new Audio();
  audio.src = `https://code.s3.yandex.net/web-code/react/${fileName}`;
  audio.play();
}

function App() {
  const [isTimeShown, setIsTimeShown] = React.useState();

  
  
  function handleChange() {
    setIsTimeShown(!isTimeShown);
  }
   
  
  
  
  return (
    <>
      <label>
        <input type="checkbox" onChange={handleChange}/>
        –í–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, –∑–≤—É–∫!)
      </label>
      {isTimeShown && <Time/>}
    </>
  );
}

function Time() {
  const [hours, setHours] = React.useState(0);
  const [minutes, setMinutes] = React.useState(0);
  const [seconds, setSeconds] = React.useState(0);
  const [milliseconds, setMilliseconds] = React.useState(0);

  React.useEffect(() => {
    requestAnimationFrame(() => {
      const date = new Date();
      setMilliseconds(date.getMilliseconds());
      setSeconds(date.getSeconds());
      setMinutes(date.getMinutes());
      setHours(date.getHours());
    });
  });

  React.useEffect(() => {
    playSound('tick.mp3');
  }, [seconds]);

  return (
    <h2>{hours}:{minutes}:{seconds}:{milliseconds}</h2>
  );
}

ReactDOM.render((
  <App/>
), document.querySelector('#root'));


//y4.2


function Time() {
  const [hours, setHours] = React.useState();
  const [minutes, setMinutes] = React.useState();
  const [seconds, setSeconds] = React.useState();
  const [milliseconds, setMilliseconds] = React.useState();

  React.useEffect(() => {
    requestAnimationFrame(() => {
      const date = new Date();
      setMilliseconds(date.getMilliseconds());
      setSeconds(date.getSeconds());
      setMinutes(date.getMinutes());
      setHours(date.getHours());
    });
  });

  React.useEffect(() => {
    if (typeof hours === 'number' && typeof minutes === 'number') {
      alert(`${hours}:${minutes}`);
    }
  }, [hours,minutes]);

  return (
    <h2>{hours}:{minutes}:{seconds}:{milliseconds}</h2>
  );
}

ReactDOM.render((
  <Time/>
), document.querySelector('#root'));


//y4.3 

function playSound(fileName) {
  const audio = new Audio();
  audio.src = `https://code.s3.yandex.net/web-code/react/${fileName}`;
  audio.play();
}

function App() {
  const [isTimeShown, setIsTimeShown] = React.useState();

  function handleChange() {
    setIsTimeShown(!isTimeShown);
  }

  return (
    <>
      <label>
        <input type="checkbox" onChange={handleChange}/>
        –í–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, –∑–≤—É–∫!)
      </label>
      {isTimeShown && <Time/>}
    </>
  );
}

function Time() {
  const [hours, setHours] = React.useState(0);
  const [minutes, setMinutes] = React.useState(0);
  const [seconds, setSeconds] = React.useState(0);
  const [milliseconds, setMilliseconds] = React.useState(0);

  React.useEffect(() => {
    requestAnimationFrame(() => {
      const date = new Date();
      setMilliseconds(date.getMilliseconds());
      setSeconds(date.getSeconds());
      setMinutes(date.getMinutes());
      setHours(date.getHours());
    });
  });

  React.useEffect(() => {
    playSound('tick.mp3');
  }, [seconds]);
  
  React.useEffect(() => {
    playSound('gong.mp3');
  }, []);

  return (
    <h2>{hours}:{minutes}:{seconds}:{milliseconds}</h2>
  );
}

ReactDOM.render((
  <App/>
), document.querySelector('#root'));


//y4.4 

function playSound(fileName) {
  const audio = new Audio();
  audio.src = `https://code.s3.yandex.net/web-code/react/${fileName}`;
  audio.play();
}

function App() {
  const [isTimeShown, setIsTimeShown] = React.useState();

  function handleChange() {
    setIsTimeShown(!isTimeShown);
  }

  return (
    <>
      <label>
        <input type="checkbox" onChange={handleChange}/>
        –í–∫–ª—é—á–∏—Ç—å –≤—Ä–µ–º—è (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, –∑–≤—É–∫!)
      </label>
      {isTimeShown && <Time/>}
    </>
  );
}

function Time() {
  const [hours, setHours] = React.useState(0);
  const [minutes, setMinutes] = React.useState(0);
  const [seconds, setSeconds] = React.useState(0);
  const [milliseconds, setMilliseconds] = React.useState(0);

  React.useEffect(() => {
    requestAnimationFrame(() => {
      const date = new Date();
      setMilliseconds(date.getMilliseconds());
      setSeconds(date.getSeconds());
      setMinutes(date.getMinutes());
      setHours(date.getHours());
    });
  });

  React.useEffect(() => {
    playSound('tick.mp3');
  }, [seconds]);

  React.useEffect(() => {
    playSound('gong.mp3');
    return() => {playSound('gong.mp3')}
  }, []);

  
    
  
  return (
    <h2>{hours}:{minutes}:{seconds}:{milliseconds}</h2>
  );
}

ReactDOM.render((
  <App/>
), document.querySelector('#root'));


// –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é –í—Å–µ –æ this

//y2.1 

'use strict';

const data = 'Hello world!';
console.log(data);


//y2.2 


function vote(voteFor) {
  'use strict'
  arguments[0] = '–î—Ä—É–≥–∞—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–∞—Ä—Ç–∏—è';
  console.log(voteFor);
}

vote('–û–¥–Ω–∞ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–∞—Ä—Ç–∏—è'); // "–î—Ä—É–≥–∞—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–∞—Ä—Ç–∏—è"


//y3.1 
const methods = {
  consoleDog: function () {
    console.log(this.dog);
  },
  consoleCat: function () {
    console.log(this.cat);
  },
};

const obj1 = Object.create(methods);

obj1.dog = '–ú–∞–ª–∞–º—É—Ç';
obj1.cat = '–†—É—Å—Å–∫–∞—è –≥–æ–ª—É–±–∞—è';

obj1.consoleDog(); // "–ú–∞–ª–∞–º—É—Ç"
obj1.consoleCat(); // "–†—É—Å—Å–∫–∞—è –≥–æ–ª—É–±–∞—è"

const obj2 = Object.create(methods);

obj2.dog = '–ë–æ—Ä–∑–∞—è';
obj2.cat = '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∞—è –∫–æ—Ä–æ—Ç–∫–æ—à–µ—Ä—Å—Ç–Ω–∞—è';

obj2.consoleDog(); // "–ë–æ—Ä–∑–∞—è"
obj2.consoleCat(); // "–ë—Ä–∏—Ç–∞–Ω—Å–∫–∞—è –∫–æ—Ä–æ—Ç–∫–æ—à–µ—Ä—Å—Ç–Ω–∞—è"


//y3.2 
const sendButton = {
  message: '–ú–µ–Ω—è –Ω–∞–∂–∞–ª–∏',
  click: function () {
    console.log(this.message);
  }
};

const button = document.querySelector('.btn');

button.addEventListener('click', function () {
  sendButton.click();
}); 

//y4 

const dataForSum = {
  firstArgument: 10,
  secondArgument: 44
};

const dataForMultiply = {
  firstArgument: 10,
  secondArgument: 44
};

const functions = {
  sum() {
    return this.firstArgument + this.secondArgument;
  },
  multiply() {
    return this.firstArgument * this.secondArgument;
  }
};

// –∏–∑–º–µ–Ω–∏—Ç–µ –≤—ã–∑–æ–≤—ã –≤–Ω—É—Ç—Ä–∏ console.log
console.log(functions.sum.call(dataForSum));
console.log(functions.multiply.call(dataForMultiply));


//y5 

function Animal(type, phrase) {
    this.type = type
    this.phrase = phrase
}

Animal.prototype.say = function () {
  console.log(`${this.type} says ${this.phrase}`);
}; 

const fox = new Animal('fox', 'woopwoopwoop');
const tRex = new Animal('T-rex', '–ØAWR');

fox.say(); // fox says woopwoopwoop
tRex.say(); // T-rex says –ØAWR


//y6

function Button(buttonElement, message) {
  this.element = buttonElement;
  this.message = message;
  this.click = () => {
    console.log(this.message);
  };
}

const button = new Button(document.querySelector('.btn'), '–ú–µ–Ω—è –Ω–∞–∂–∞–ª–∏');

button.element.addEventListener('click', button.click);
